name: Build Zenamp

on:
  push:
    branches: [ master, main, dev ]
    paths:
      - 'gtk3/**'
      - '**.cpp'
      - '**.h'
      - 'gtk3/Makefile'
      - '**.yml'
      - '**.yaml'
  pull_request:
    branches: [ master, main, dev ]
    paths:
      - 'gtk3/**'
      - '**.cpp'
      - '**.h'
      - 'gtk3/Makefile'
      - '**.yml'
      - '**.yaml'
  workflow_dispatch:

env:
  PRODUCT_VERSION: "1.0.${{ github.run_number }}"
  UPGRADE_CODE: "A8F5B321-9D73-4E2A-B8F6-D425E9A7C841"

jobs:
  build-linux:
    runs-on: ubuntu-latest
    container: 
      image: fedora:41
    outputs:
      version: ${{ env.PRODUCT_VERSION }}

    steps:
    - uses: actions/checkout@v4

    - name: Install Dependencies
      run: |
        dnf -y install \
          gcc gcc-c++ make \
          gtk3-devel gtkmm30-devel \
          SDL2-devel SDL2_mixer-devel \
          libvorbis-devel flac-devel \
          gstreamer1-devel gstreamer1-plugins-base-devel \
          pkg-config \
          mingw64-gcc mingw64-gcc-c++ \
          mingw64-gtk3 mingw64-gtkmm30 \
          mingw64-SDL2 mingw64-SDL2_mixer \
          mingw64-libvorbis mingw64-flac \
          mingw64-opus mingw64-opusfile \
          wine wine-devel \
          zip unzip \
          opus-devel opusfile-devel \
          ImageMagick \
          ffmpeg-devel


    - name: Convert Icon
      working-directory: gtk3
      run: |
        # Convert PNG to ICO if icon.png exists
        if [ -f "../icon.png" ]; then
          echo "Converting icon.png to icon.ico..."
          convert ../icon.png -resize 256x256 -compress zip icon.ico
          echo "Icon conversion successful"
          ls -la icon.ico
        elif [ -f "icon.png" ]; then
          echo "Converting local icon.png to icon.ico..."
          convert icon.png -resize 256x256 -compress zip icon.ico
          echo "Icon conversion successful"
          ls -la icon.ico
        else
          echo "No icon.png found, creating placeholder icon.ico"
          # Create a simple colored square as fallback
          convert -size 256x256 xc:'#1a73e8' -fill white -gravity center \
                  -pointsize 32 -annotate +0+0 'Zenamp' icon.ico
        fi

    - name: Create Windows Resource File
      working-directory: gtk3
      run: |
        # Create resource file to embed icon and version info
        cat > icon.rc << 'EOF'
        #include <windows.h>
        
        // Icon resource
        1 ICON "icon.ico"
        
        // Version information
        VS_VERSION_INFO VERSIONINFO
        FILEVERSION 1,0,${{ github.run_number }},0
        PRODUCTVERSION 1,0,${{ github.run_number }},0
        FILEFLAGSMASK 0x3fL
        FILEFLAGS 0x0L
        FILEOS 0x40004L
        FILETYPE 0x1L
        FILESUBTYPE 0x0L
        BEGIN
            BLOCK "StringFileInfo"
            BEGIN
                BLOCK "040904b0"
                BEGIN
                    VALUE "CompanyName", "Jason Brian Hall"
                    VALUE "FileDescription", "Zenamp - Retro-Modern Music Player"
                    VALUE "FileVersion", "1.0.${{ github.run_number }}.0"
                    VALUE "InternalName", "zenamp"
                    VALUE "LegalCopyright", "Copyright (c) 2025 Jason Brian Hall"
                    VALUE "OriginalFilename", "zenamp.exe"
                    VALUE "ProductName", "Zenamp"
                    VALUE "ProductVersion", "1.0.${{ github.run_number }}.0"
                END
            END
            BLOCK "VarFileInfo"
            BEGIN
                VALUE "Translation", 0x409, 1200
            END
        END
        EOF
        
        echo "Resource file created successfully"
        cat icon.rc

    - name: Build Linux Version
      working-directory: gtk3
      run: |
        make linux
        
        # Verify the build
        if [ -f "build/linux/zenamp" ]; then
          echo "Linux build successful"
          ls -la build/linux/
        else
          echo "Linux build failed"
          exit 1
        fi

    - name: Build Windows Version
      working-directory: gtk3
      run: |
        # Compile resource file first
        x86_64-w64-mingw32-windres icon.rc -o icon.o
        echo "Resource file compiled successfully"
        
        # Build with embedded icon and version info
        make windows EXTRA_OBJS=icon.o
        
        # Verify the build
        if [ -f "build/windows/zenamp.exe" ]; then
          echo "Windows build successful"
          ls -la build/windows/
        else
          echo "Windows build failed"
          exit 1
        fi

    - name: Prepare Build Artifacts
      working-directory: gtk3
      run: |
        # Copy resources to both builds
        cp ../README.md build/linux/ 2>/dev/null || true
        cp ../README.md build/windows/ 2>/dev/null || true
        cp icon.ico build/windows/ 2>/dev/null || true
        
        # Copy PNG assets for MSIX
        cp icon.png build/windows/ 2>/dev/null || true
        cp poster.png build/windows/ 2>/dev/null || true
        
        # For Windows build, collect required DLLs
        cd build/windows
        
        # Find and copy essential DLLs
        DLL_SOURCE="/usr/x86_64-w64-mingw32/sys-root/mingw/bin"
        
        # Core runtime DLLs
        for dll in \
          libgcc_s_seh-1.dll \
          libstdc++-6.dll \
          libwinpthread-1.dll \
          SDL2.dll \
          SDL2_mixer.dll \
          libvorbis-0.dll \
          libvorbisfile-3.dll \
          libogg-0.dll \
          libFLAC-12.dll \
          libgtk-3-0.dll \
          libgdk-3-0.dll \
          libglib-2.0-0.dll \
          libgobject-2.0-0.dll \
          libgio-2.0-0.dll \
          libcairo-2.dll \
          libpango-1.0-0.dll \
          libpangocairo-1.0-0.dll \
          libgdk_pixbuf-2.0-0.dll \
          libatk-1.0-0.dll \
          libharfbuzz-0.dll \
          libfontconfig-1.dll \
          libfreetype-6.dll \
          libexpat-1.dll \
          libbz2-1.dll \
          libpng16-16.dll \
          zlib1.dll \
          libiconv-2.dll \
          libintl-8.dll \
          libffi-8.dll \
          libpcre2-8-0.dll; do
          if [ -f "$DLL_SOURCE/$dll" ]; then
            cp "$DLL_SOURCE/$dll" .
            echo "Copied: $dll"
          else
            echo "Missing: $dll"
          fi
        done
        
        # Create GTK runtime directories
        mkdir -p lib/gdk-pixbuf-2.0
        mkdir -p lib/gtk-3.0
        mkdir -p share/glib-2.0/schemas
        mkdir -p share/icons
        mkdir -p share/themes
        
        # Copy GTK schemas if available
        if [ -d "/usr/x86_64-w64-mingw32/sys-root/mingw/share/glib-2.0/schemas" ]; then
          cp -r /usr/x86_64-w64-mingw32/sys-root/mingw/share/glib-2.0/schemas/* share/glib-2.0/schemas/ 2>/dev/null || true
        fi
        
        # List all files for verification
        echo "=== Windows build contents ==="
        find . -type f | sort
        
        # Create portable ZIP
        cd ../..
        zip -r "Zenamp-Portable.zip" build/windows/*

    - name: Test Linux Build
      working-directory: gtk3
      run: |
        # Test if the binary can at least show version/help
        cd build/linux
        ./zenamp --help || echo "Help not available, but binary runs"
        echo "Linux binary test completed"

    - name: Upload Build Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: zenamp-builds
        path: |
          gtk3/build/linux/**/*
          gtk3/build/windows/**/*
          gtk3/Zenamp-Portable.zip
        retention-days: 7

  build-msi-windows:
    needs: build-linux
    runs-on: windows-latest
    permissions:
      contents: write

    steps:
    - uses: actions/checkout@v4

    - name: Download Build Artifacts
      uses: actions/download-artifact@v4
      with:
        name: zenamp-builds
        path: artifacts

    - name: Setup WiX Toolset
      run: |
        # Download and install WiX Toolset v3
        Invoke-WebRequest -Uri "https://github.com/wixtoolset/wix3/releases/download/wix3112rtm/wix311-binaries.zip" -OutFile "wix.zip"
        Expand-Archive -Path "wix.zip" -DestinationPath "wix"
        echo "$env:GITHUB_WORKSPACE\wix" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append

    - name: Create License Files
      run: |
        # Create MIT License text file
        @"
        MIT License
        
        Copyright (c) 2025 Jason Brian Hall
        
        Permission is hereby granted, free of charge, to any person obtaining a copy
        of this software and associated documentation files (the "Software"), to deal
        in the Software without restriction, including without limitation the rights
        to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
        copies of the Software, and to permit persons to whom the Software is
        furnished to do so, subject to the following conditions:
        
        The above copyright notice and this permission notice shall be included in all
        copies or substantial portions of the Software.
        
        THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
        IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
        FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
        AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
        LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
        OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
        SOFTWARE.
        "@ | Out-File -FilePath "artifacts\build\windows\LICENSE.txt" -Encoding UTF8

        # Create License RTF for installer
        @"
        {\rtf1\ansi\deff0 {\fonttbl {\f0 Times New Roman;}}
        \f0\fs24
        MIT License\par
        \par
        Copyright (c) 2025 Jason Brian Hall\par
        \par
        Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\par
        \par
        The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\par
        \par
        THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\par
        }
        "@ | Out-File -FilePath "artifacts\build\windows\License.rtf" -Encoding UTF8

    - name: Generate MSI Installer
      working-directory: artifacts/build/windows
      run: |
        # Generate component entries for all DLLs
        $dllEntries = Get-ChildItem -Name "*.dll" | ForEach-Object {
          $safeId = $_ -replace '[^a-zA-Z0-9]', '_'
          "          <File Id=`"$safeId`" Name=`"$_`" Source=`"$_`"/>"
        }
        
        # Create WXS installer definition with file associations
        @"
        <?xml version="1.0" encoding="UTF-8"?>
        <Wix xmlns="http://schemas.microsoft.com/wix/2006/wi">
          
          <Product Id="*" 
                   Name="Zenamp" 
                   Language="1033" 
                   Version="${{ needs.build-linux.outputs.version }}" 
                   Manufacturer="Jason Brian Hall" 
                   UpgradeCode="${{ env.UPGRADE_CODE }}"> 
            
            <Package InstallerVersion="500" 
                     Compressed="yes" 
                     InstallScope="perMachine" 
                     Description="Zenamp - Retro-Modern Music Player"
                     Comments="Built with GitHub Actions"
                     Manufacturer="Jason Brian Hall" />
            
            <!-- Major upgrade configuration -->
            <MajorUpgrade 
              DowngradeErrorMessage="A newer version of Zenamp is already installed. Please uninstall it first." 
              Schedule="afterInstallInitialize" />
            
            <MediaTemplate EmbedCab="yes" CompressionLevel="high" />
            
            <!-- License agreement -->
            <WixVariable Id="WixUILicenseRtf" Value="License.rtf" />
            
            <!-- Custom properties -->
            <Property Id="ARPPRODUCTICON" Value="zenampIcon" />
            <Property Id="ARPURLINFOABOUT" Value="https://github.com/jasonbrianhall/midi_msdos" />
            <Property Id="ARPNOREPAIR" Value="yes" />
            <Property Id="ARPNOMODIFY" Value="yes" />
            <Property Id="ARPHELPLINK" Value="https://github.com/jasonbrianhall/midi_msdos/issues" />
            
            <!-- File association properties -->
            <Property Id="ASSOCIATE_FILES" Value="1" />
            
            <!-- Installation scope choice -->
            <Property Id="ApplicationFolderName" Value="Zenamp" />
            <Property Id="WixAppFolder" Value="WixPerMachineFolder" />
            <WixVariable Id="WixUISupportPerUser" Value="1" />
            <WixVariable Id="WixUISupportPerMachine" Value="1" />
            
            <Directory Id="TARGETDIR" Name="SourceDir">
              <!-- Program Files installation -->
              <Directory Id="ProgramFilesFolder">
                <Directory Id="INSTALLFOLDER" Name="!(bind.Property.ApplicationFolderName)">
                  
                  <!-- Main application component -->
                  <Component Id="MainExecutable" 
                           Guid="B58E73D9-4A96-49B7-C36E-2E7D0E5B9A45"
                           Win64="no">
                    <File Id="MainEXE" 
                          Name="zenamp.exe" 
                          Source="zenamp.exe" 
                          KeyPath="yes" />
                    
                    <!-- Application files -->
                    <File Id="README" Name="README.md" Source="README.md"/>
                    <File Id="LICENSE_TXT" Name="LICENSE.txt" Source="LICENSE.txt"/>
                    <File Id="IconFile" Name="icon.ico" Source="icon.ico"/>
                    
                    <!-- DLL files -->
        $($dllEntries -join "`r`n")
                    
                    <!-- Registry entries -->
                    <RegistryKey Root="HKLM" Key="SOFTWARE\Zenamp">
                      <RegistryValue Type="string" Name="InstallPath" Value="[INSTALLFOLDER]" />
                      <RegistryValue Type="string" Name="Version" Value="${{ needs.build-linux.outputs.version }}" />
                      <RegistryValue Type="string" Name="Publisher" Value="Jason Brian Hall" />
                    </RegistryKey>
                  </Component>
                  
                  <!-- File Association Component -->
                  <Component Id="FileAssociations" Guid="C3F4E765-B8D2-4E91-A7C8-F64A8A9E2B73">
                    <Condition>ASSOCIATE_FILES</Condition>
                    
                    <!-- Program registration -->
                    <RegistryKey Root="HKLM" Key="SOFTWARE\Classes\Applications\zenamp.exe">
                      <RegistryValue Type="string" Name="FriendlyAppName" Value="Zenamp" />
                      <RegistryValue Type="string" Key="DefaultIcon" Value="[INSTALLFOLDER]zenamp.exe,0" />
                      <RegistryValue Type="string" Key="shell\open\command" Value="&quot;[INSTALLFOLDER]zenamp.exe&quot; &quot;%1&quot;" />
                      <RegistryValue Type="string" Key="shell\play\command" Value="&quot;[INSTALLFOLDER]zenamp.exe&quot; &quot;%1&quot;" />
                      <RegistryValue Type="string" Key="shell\play" Value="Play with Zenamp" />
                    </RegistryKey>
                    
                    <!-- WAV Files -->
                    <RegistryKey Root="HKLM" Key="SOFTWARE\Classes\.wav\OpenWithProgids">
                      <RegistryValue Type="string" Name="ZenampWAV" Value="" />
                    </RegistryKey>
                    <RegistryKey Root="HKLM" Key="SOFTWARE\Classes\ZenampWAV">
                      <RegistryValue Type="string" Value="WAV Audio File" />
                      <RegistryValue Type="string" Key="DefaultIcon" Value="[INSTALLFOLDER]zenamp.exe,0" />
                      <RegistryValue Type="string" Key="shell\open\command" Value="&quot;[INSTALLFOLDER]zenamp.exe&quot; &quot;%1&quot;" />
                    </RegistryKey>
                    
                    <!-- MP3 Files -->
                    <RegistryKey Root="HKLM" Key="SOFTWARE\Classes\.mp3\OpenWithProgids">
                      <RegistryValue Type="string" Name="ZenampMP3" Value="" />
                    </RegistryKey>
                    <RegistryKey Root="HKLM" Key="SOFTWARE\Classes\ZenampMP3">
                      <RegistryValue Type="string" Value="MP3 Audio File" />
                      <RegistryValue Type="string" Key="DefaultIcon" Value="[INSTALLFOLDER]zenamp.exe,0" />
                      <RegistryValue Type="string" Key="shell\open\command" Value="&quot;[INSTALLFOLDER]zenamp.exe&quot; &quot;%1&quot;" />
                    </RegistryKey>
                    
                    <!-- OGG Files -->
                    <RegistryKey Root="HKLM" Key="SOFTWARE\Classes\.ogg\OpenWithProgids">
                      <RegistryValue Type="string" Name="ZenampOGG" Value="" />
                    </RegistryKey>
                    <RegistryKey Root="HKLM" Key="SOFTWARE\Classes\ZenampOGG">
                      <RegistryValue Type="string" Value="OGG Audio File" />
                      <RegistryValue Type="string" Key="DefaultIcon" Value="[INSTALLFOLDER]zenamp.exe,0" />
                      <RegistryValue Type="string" Key="shell\open\command" Value="&quot;[INSTALLFOLDER]zenamp.exe&quot; &quot;%1&quot;" />
                    </RegistryKey>
                    
                    <!-- FLAC Files -->
                    <RegistryKey Root="HKLM" Key="SOFTWARE\Classes\.flac\OpenWithProgids">
                      <RegistryValue Type="string" Name="ZenampFLAC" Value="" />
                    </RegistryKey>
                    <RegistryKey Root="HKLM" Key="SOFTWARE\Classes\ZenampFLAC">
                      <RegistryValue Type="string" Value="FLAC Audio File" />
                      <RegistryValue Type="string" Key="DefaultIcon" Value="[INSTALLFOLDER]zenamp.exe,0" />
                      <RegistryValue Type="string" Key="shell\open\command" Value="&quot;[INSTALLFOLDER]zenamp.exe&quot; &quot;%1&quot;" />
                    </RegistryKey>
                    
                    <!-- MIDI Files -->
                    <RegistryKey Root="HKLM" Key="SOFTWARE\Classes\.mid\OpenWithProgids">
                      <RegistryValue Type="string" Name="ZenampMIDI" Value="" />
                    </RegistryKey>
                    <RegistryKey Root="HKLM" Key="SOFTWARE\Classes\.midi\OpenWithProgids">
                      <RegistryValue Type="string" Name="ZenampMIDI" Value="" />
                    </RegistryKey>
                    <RegistryKey Root="HKLM" Key="SOFTWARE\Classes\ZenampMIDI">
                      <RegistryValue Type="string" Value="MIDI Audio File" />
                      <RegistryValue Type="string" Key="DefaultIcon" Value="[INSTALLFOLDER]zenamp.exe,0" />
                      <RegistryValue Type="string" Key="shell\open\command" Value="&quot;[INSTALLFOLDER]zenamp.exe&quot; &quot;%1&quot;" />
                    </RegistryKey>
                    
                    <!-- AIFF Files -->
                    <RegistryKey Root="HKLM" Key="SOFTWARE\Classes\.aiff\OpenWithProgids">
                      <RegistryValue Type="string" Name="ZenampAIFF" Value="" />
                    </RegistryKey>
                    <RegistryKey Root="HKLM" Key="SOFTWARE\Classes\.aif\OpenWithProgids">
                      <RegistryValue Type="string" Name="ZenampAIFF" Value="" />
                    </RegistryKey>
                    <RegistryKey Root="HKLM" Key="SOFTWARE\Classes\ZenampAIFF">
                      <RegistryValue Type="string" Value="AIFF Audio File" />
                      <RegistryValue Type="string" Key="DefaultIcon" Value="[INSTALLFOLDER]zenamp.exe,0" />
                      <RegistryValue Type="string" Key="shell\open\command" Value="&quot;[INSTALLFOLDER]zenamp.exe&quot; &quot;%1&quot;" />
                    </RegistryKey>
                    
                    <!-- OPUS Files -->
                    <RegistryKey Root="HKLM" Key="SOFTWARE\Classes\.opus\OpenWithProgids">
                      <RegistryValue Type="string" Name="ZenampOPUS" Value="" />
                    </RegistryKey>
                    <RegistryKey Root="HKLM" Key="SOFTWARE\Classes\ZenampOPUS">
                      <RegistryValue Type="string" Value="OPUS Audio File" />
                      <RegistryValue Type="string" Key="DefaultIcon" Value="[INSTALLFOLDER]zenamp.exe,0" />
                      <RegistryValue Type="string" Key="shell\open\command" Value="&quot;[INSTALLFOLDER]zenamp.exe&quot; &quot;%1&quot;" />
                    </RegistryKey>
                    
                    <RegistryValue Root="HKCU" Key="Software\GTKzenamp\Components" 
                                 Type="integer" Name="FileAssociations" Value="1" KeyPath="yes"/>
                  </Component>
                  
                  <!-- GTK Runtime directories -->
                  <Directory Id="LibDir" Name="lib">
                    <Directory Id="GdkPixbuf" Name="gdk-pixbuf-2.0">
                      <Component Id="GdkPixbufDir" Guid="A9A4C725-E83A-4D68-B9D3-752E4A9E6E40">
                        <CreateFolder />
                        <RemoveFolder Id="RemoveGdkPixbuf" On="uninstall" />
                        <RegistryValue Root="HKCU" Key="Software\GTKzenamp\Components" 
                                     Type="integer" Name="GdkPixbuf" Value="1" KeyPath="yes"/>
                      </Component>
                    </Directory>
                    <Directory Id="Gtk3" Name="gtk-3.0">
                      <Component Id="Gtk3Dir" Guid="C2E5D951-A6B2-4E79-C7E4-864A3A9E7A51">
                        <CreateFolder />
                        <RemoveFolder Id="RemoveGtk3" On="uninstall" />
                        <RegistryValue Root="HKCU" Key="Software\GTKzenamp\Components" 
                                     Type="integer" Name="Gtk3" Value="1" KeyPath="yes"/>
                      </Component>
                    </Directory>
                  </Directory>
                  
                  <Directory Id="ShareDir" Name="share">
                    <Directory Id="GLib2" Name="glib-2.0">
                      <Directory Id="Schemas" Name="schemas">
                        <Component Id="GtkSchemas" Guid="D8A6E372-C7A3-4A83-D2A5-975A4A9E8A62">
                          <CreateFolder />
                          <RemoveFolder Id="RemoveSchemas" On="uninstall" />
                          <RegistryValue Root="HKCU" Key="Software\GTKzenamp\Components" 
                                       Type="integer" Name="Schemas" Value="1" KeyPath="yes"/>
                        </Component>
                      </Directory>
                    </Directory>
                    <Directory Id="Icons" Name="icons">
                      <Component Id="IconsDir" Guid="E7A8A483-D4E4-4A94-E3A6-086A5A9E9A73">
                        <CreateFolder />
                        <RemoveFolder Id="RemoveIcons" On="uninstall" />
                        <RegistryValue Root="HKCU" Key="Software\GTKzenamp\Components" 
                                     Type="integer" Name="Icons" Value="1" KeyPath="yes"/>
                      </Component>
                    </Directory>
                    <Directory Id="Themes" Name="themes">
                      <Component Id="ThemesDir" Guid="A9B9A594-E5A5-4AA5-A4B7-197B6A9E0B84">
                        <CreateFolder />
                        <RemoveFolder Id="RemoveThemes" On="uninstall" />
                        <RegistryValue Root="HKCU" Key="Software\GTKzenamp\Components" 
                                     Type="integer" Name="Themes" Value="1" KeyPath="yes"/>
                      </Component>
                    </Directory>
                  </Directory>
                </Directory>
              </Directory>
              
              <!-- Start Menu shortcuts -->
              <Directory Id="ProgramMenuFolder">
                <Directory Id="ApplicationProgramsFolder" Name="Zenamp">
                  <Component Id="ApplicationShortcuts" Guid="A0C3E560-A7B2-4C64-AD83-A42E9AE63E80">
                    <Shortcut Id="ApplicationStartMenu" 
                             Name="Zenamp" 
                             Target="[INSTALLFOLDER]zenamp.exe" 
                             WorkingDirectory="INSTALLFOLDER"
                             Description="Launch Zenamp"
                             Icon="zenampIcon"/>
                    <Shortcut Id="UninstallShortcut"
                             Name="Uninstall Zenamp"
                             Target="[SystemFolder]msiexec.exe"
                             Arguments="/x [ProductCode]"
                             Description="Uninstall Zenamp" />
                    <RemoveFolder Id="ApplicationProgramsFolder" On="uninstall"/>
                    <RegistryValue Root="HKCU" Key="Software\GTKzenamp\Shortcuts" 
                                 Name="StartMenu" Type="integer" Value="1" KeyPath="yes"/>
                  </Component>
                </Directory>
              </Directory>
              
              <!-- Desktop shortcut (optional) -->
              <Directory Id="DesktopFolder" Name="Desktop">
                <Component Id="DesktopShortcut" Guid="B1D4A671-AAC8-4D75-BE94-E53A7A9E1C91">
                  <Condition>DESKTOP_SHORTCUT</Condition>
                  <Shortcut Id="DesktopShortcut" 
                           Name="Zenamp" 
                           Target="[INSTALLFOLDER]zenamp.exe"
                           WorkingDirectory="INSTALLFOLDER"
                           Description="Launch Zenamp"
                           Icon="zenampIcon"/>
                  <RegistryValue Root="HKCU" Key="Software\GTKzenamp\Shortcuts" 
                               Name="Desktop" Type="integer" Value="1" KeyPath="yes"/>
                </Component>
              </Directory>
            </Directory>
            
            <!-- Feature definitions -->
            <Feature Id="ProductFeature" 
                     Title="Zenamp" 
                     Description="The main Zenamp application and required runtime files."
                     Level="1" 
                     ConfigurableDirectory="INSTALLFOLDER"
                     AllowAdvertise="no">
              <ComponentRef Id="MainExecutable" />
              <ComponentRef Id="ApplicationShortcuts" />
              <ComponentRef Id="GtkSchemas" />
              <ComponentRef Id="GdkPixbufDir" />
              <ComponentRef Id="Gtk3Dir" />
              <ComponentRef Id="IconsDir" />
              <ComponentRef Id="ThemesDir" />
            </Feature>
            
            <Feature Id="DesktopShortcutFeature" 
                     Title="Desktop Shortcut" 
                     Description="Create a shortcut on the desktop."
                     Level="1000">
              <ComponentRef Id="DesktopShortcut" />
            </Feature>
            
            <Feature Id="FileAssociationFeature" 
                     Title="File Associations" 
                     Description="Associate audio files with Zenamp (WAV, MP3, OGG, FLAC, MIDI, AIFF, OPUS)."
                     Level="1">
              <ComponentRef Id="FileAssociations" />
            </Feature>
            
            <!-- Application icon -->
            <Icon Id="zenampIcon" SourceFile="icon.ico"/>
            
            <!-- Custom actions for cleanup -->
            <CustomAction Id="CleanupRegistryOnUninstall" 
                         Script="vbscript"
                         Execute="deferred"
                         Impersonate="no">
              <![CDATA[
                On Error Resume Next
                Set shell = CreateObject("WScript.Shell")
                shell.RegDelete "HKLM\SOFTWARE\Zenamp\"
                shell.RegDelete "HKCU\Software\GTKzenamp\"
                ' Clean up file associations
                shell.RegDelete "HKLM\SOFTWARE\Classes\Applications\zenamp.exe\"
                shell.RegDelete "HKLM\SOFTWARE\Classes\ZenampWAV\"
                shell.RegDelete "HKLM\SOFTWARE\Classes\ZenampMP3\"
                shell.RegDelete "HKLM\SOFTWARE\Classes\ZenampOGG\"
                shell.RegDelete "HKLM\SOFTWARE\Classes\ZenampFLAC\"
                shell.RegDelete "HKLM\SOFTWARE\Classes\ZenampMIDI\"
                shell.RegDelete "HKLM\SOFTWARE\Classes\ZenampAIFF\"
                shell.RegDelete "HKLM\SOFTWARE\Classes\ZenampOPUS\"
              ]]>
            </CustomAction>
            
            <InstallExecuteSequence>
              <Custom Action="CleanupRegistryOnUninstall" Before="RemoveFiles">
                REMOVE="ALL"
              </Custom>
            </InstallExecuteSequence>
            
            <!-- UI Configuration -->
            <Property Id="WIXUI_INSTALLDIR" Value="INSTALLFOLDER" />
            <Property Id="DESKTOP_SHORTCUT" Value="1" />
            
            <UIRef Id="WixUI_FeatureTree" />
            <UIRef Id="WixUI_ErrorProgressText" />
            
          </Product>
        </Wix>
        "@ | Out-File -FilePath "installer.wxs" -Encoding UTF8

    - name: Build MSI Installer
      working-directory: artifacts/build/windows
      run: |
        # Debug: Show current directory and files
        Write-Host "=== DEBUG: Current directory ==="
        Get-Location
        Write-Host "=== DEBUG: Files in current directory ==="
        Get-ChildItem
        
        # Compile the installer
        Write-Host "=== Building MSI installer ==="
        & candle.exe installer.wxs
        if ($LASTEXITCODE -ne 0) {
          Write-Error "Candle compilation failed with exit code $LASTEXITCODE"
          exit 1
        }
        
        & light.exe -ext WixUIExtension installer.wixobj -o "Zenamp.msi"
        if ($LASTEXITCODE -ne 0) {
          Write-Error "Light linking failed with exit code $LASTEXITCODE"
          exit 1
        }
        
        # Verify MSI was created
        if (Test-Path "Zenamp.msi") {
          Write-Host "MSI installer created successfully: Zenamp.msi"
          $msiSize = (Get-Item "Zenamp.msi").Length
          Write-Host "MSI file size: $msiSize bytes"
        } else {
          Write-Error "MSI file was not created!"
          exit 1
        }

    - name: Upload MSI Installer
      uses: actions/upload-artifact@v4
      with:
        name: Zenamp.msi
        path: artifacts/build/windows/Zenamp.msi

    - name: Upload Portable ZIP
      uses: actions/upload-artifact@v4
      with:
        name: Zenamp-Portable.zip
        path: artifacts/Zenamp-Portable.zip

  build-msix-windows:
    needs: build-linux
    runs-on: windows-latest
    permissions:
      contents: write

    steps:
    - uses: actions/checkout@v4

    - name: Download Build Artifacts
      uses: actions/download-artifact@v4
      with:
        name: zenamp-builds
        path: artifacts

    - name: Create Microsoft Store Assets
      run: |
        # Create package structure
        New-Item -ItemType Directory -Path "msix-package" -Force
        New-Item -ItemType Directory -Path "msix-package/Files" -Force
        New-Item -ItemType Directory -Path "msix-package/Assets" -Force
        
        # Copy application files
        Copy-Item "artifacts/build/windows/*" "msix-package/Files/" -Recurse -Force
        
        $iconPath = "artifacts/build/windows/icon.png"
        $posterPath = "artifacts/build/windows/poster.png"
        
        if (-not (Test-Path $iconPath)) {
          Write-Error "icon.png not found in artifacts"
          exit 1
        }
        
        Write-Host "Creating Microsoft Store compliant assets..."
        
        # Store Logo (50x50)
        & magick "$iconPath" -resize 50x50 "msix-package/Assets/StoreLogo.scale-100.png"
        & magick "$iconPath" -resize 63x63 "msix-package/Assets/StoreLogo.scale-125.png"
        & magick "$iconPath" -resize 75x75 "msix-package/Assets/StoreLogo.scale-150.png"
        & magick "$iconPath" -resize 100x100 "msix-package/Assets/StoreLogo.scale-200.png"
        
        # Square 44x44 Logo (for taskbar, start menu)
        & magick "$iconPath" -resize 44x44 "msix-package/Assets/Square44x44Logo.scale-100.png"
        & magick "$iconPath" -resize 55x55 "msix-package/Assets/Square44x44Logo.scale-125.png"
        & magick "$iconPath" -resize 66x66 "msix-package/Assets/Square44x44Logo.scale-150.png"
        & magick "$iconPath" -resize 88x88 "msix-package/Assets/Square44x44Logo.scale-200.png"
        
        # Target size variants (unplated, for file associations)
        & magick "$iconPath" -resize 16x16 "msix-package/Assets/Square44x44Logo.targetsize-16_altform-unplated.png"
        & magick "$iconPath" -resize 24x24 "msix-package/Assets/Square44x44Logo.targetsize-24_altform-unplated.png"
        & magick "$iconPath" -resize 32x32 "msix-package/Assets/Square44x44Logo.targetsize-32_altform-unplated.png"
        & magick "$iconPath" -resize 48x48 "msix-package/Assets/Square44x44Logo.targetsize-48_altform-unplated.png"
        & magick "$iconPath" -resize 256x256 "msix-package/Assets/Square44x44Logo.targetsize-256_altform-unplated.png"
        
        # Square 150x150 Logo (main tile)
        & magick "$iconPath" -resize 150x150 "msix-package/Assets/Square150x150Logo.scale-100.png"
        & magick "$iconPath" -resize 188x188 "msix-package/Assets/Square150x150Logo.scale-125.png"
        & magick "$iconPath" -resize 225x225 "msix-package/Assets/Square150x150Logo.scale-150.png"
        & magick "$iconPath" -resize 300x300 "msix-package/Assets/Square150x150Logo.scale-200.png"
        
        # Wide 310x150 Logo (wide tile) - from poster if available
        if (Test-Path $posterPath) {
          & magick "$posterPath" -resize 310x150^ -gravity center -extent 310x150 "msix-package/Assets/Wide310x150Logo.scale-100.png"
          & magick "$posterPath" -resize 388x188^ -gravity center -extent 388x188 "msix-package/Assets/Wide310x150Logo.scale-125.png"
          & magick "$posterPath" -resize 465x225^ -gravity center -extent 465x225 "msix-package/Assets/Wide310x150Logo.scale-150.png"
          & magick "$posterPath" -resize 620x300^ -gravity center -extent 620x300 "msix-package/Assets/Wide310x150Logo.scale-200.png"
        } else {
          # Create wide logos from square icon with padding
          & magick "$iconPath" -resize 150x150 -background "#1a73e8" -gravity center -extent 310x150 "msix-package/Assets/Wide310x150Logo.scale-100.png"
          & magick "$iconPath" -resize 188x188 -background "#1a73e8" -gravity center -extent 388x188 "msix-package/Assets/Wide310x150Logo.scale-125.png"
          & magick "$iconPath" -resize 225x225 -background "#1a73e8" -gravity center -extent 465x225 "msix-package/Assets/Wide310x150Logo.scale-150.png"
          & magick "$iconPath" -resize 300x300 -background "#1a73e8" -gravity center -extent 620x300 "msix-package/Assets/Wide310x150Logo.scale-200.png"
        }
        
        Write-Host "All Microsoft Store assets created successfully"

    - name: Create Package Manifest
      run: |
        @"
        <?xml version="1.0" encoding="utf-8"?>
        <Package xmlns="http://schemas.microsoft.com/appx/manifest/foundation/windows10"
                 xmlns:uap="http://schemas.microsoft.com/appx/manifest/uap/windows10"
                 xmlns:rescap="http://schemas.microsoft.com/appx/manifest/foundation/windows10/restrictedcapabilities">
          <Identity Name="JasonBrianHall.Zenamp"
                    Version="${{ needs.build-linux.outputs.version }}.0"
                    Publisher="CN=7A3CF65F-504C-42F2-BABD-6A0512A0A017"
                    ProcessorArchitecture="x86" />
          
          <Properties>
            <DisplayName>Zenamp</DisplayName>
            <PublisherDisplayName>Jason Brian Hall</PublisherDisplayName>
            <Description>Zenamp - Multi-format audio player with retro MIDI synthesis and OPL3 sound</Description>
            <Logo>Assets\StoreLogo.scale-100.png</Logo>
          </Properties>
          
          <Dependencies>
            <TargetDeviceFamily Name="Windows.Desktop" MinVersion="10.0.17763.0" MaxVersionTested="10.0.22000.0" />
          </Dependencies>
          
          <Resources>
            <Resource Language="en-US"/>
          </Resources>
          
          <Capabilities>
            <!-- Standard capabilities for media player -->
            <Capability Name="internetClient" />
            <uap:Capability Name="musicLibrary" />
            <uap:Capability Name="videosLibrary" />
            <uap:Capability Name="removableStorage" />
            
            <!-- Required for desktop bridge apps -->
            <rescap:Capability Name="runFullTrust" />
          </Capabilities>
          
          <Applications>
            <Application Id="Zenamp" Executable="Files\zenamp.exe" EntryPoint="Windows.FullTrustApplication">
              <uap:VisualElements DisplayName="Zenamp"
                                  Description="Multi-format audio player with retro MIDI synthesis"
                                  Square150x150Logo="Assets\Square150x150Logo.scale-100.png"
                                  Square44x44Logo="Assets\Square44x44Logo.scale-100.png"
                                  BackgroundColor="#1a73e8">
                <uap:DefaultTile Wide310x150Logo="Assets\Wide310x150Logo.scale-100.png"
                                ShortName="Zenamp">
                </uap:DefaultTile>
                <uap:SplashScreen Image="Assets\Square150x150Logo.scale-100.png" />
              </uap:VisualElements>
              
              <Extensions>
                <uap:Extension Category="windows.fileTypeAssociation">
                  <uap:FileTypeAssociation Name="zenamp-audio">
                    <uap:DisplayName>Audio Files</uap:DisplayName>
                    <uap:Logo>Assets\Square44x44Logo.targetsize-24_altform-unplated.png</uap:Logo>
                    <uap:SupportedFileTypes>
                      <uap:FileType ContentType="audio/wav">.wav</uap:FileType>
                      <uap:FileType ContentType="audio/mpeg">.mp3</uap:FileType>
                      <uap:FileType ContentType="audio/ogg">.ogg</uap:FileType>
                      <uap:FileType ContentType="audio/flac">.flac</uap:FileType>
                      <uap:FileType ContentType="audio/midi">.mid</uap:FileType>
                      <uap:FileType ContentType="audio/midi">.midi</uap:FileType>
                      <uap:FileType ContentType="audio/aiff">.aiff</uap:FileType>
                      <uap:FileType ContentType="audio/aiff">.aif</uap:FileType>
                      <uap:FileType ContentType="audio/opus">.opus</uap:FileType>
                      <uap:FileType ContentType="audio/x-mpegurl">.m3u</uap:FileType>
                      <uap:FileType ContentType="audio/x-mpegurl">.m3u8</uap:FileType>
                    </uap:SupportedFileTypes>
                  </uap:FileTypeAssociation>
                </uap:Extension>
              </Extensions>
            </Application>
          </Applications>
        </Package>
        "@ | Out-File -FilePath "msix-package/AppxManifest.xml" -Encoding UTF8

    - name: Build MSIX Package
      run: |
        # Use Windows SDK MakeAppx tool to create MSIX
        $makeAppxPath = "${env:ProgramFiles(x86)}\Windows Kits\10\bin\10.0.22621.0\x64\makeappx.exe"
        
        # Try different SDK versions if the specific one doesn't exist
        if (-not (Test-Path $makeAppxPath)) {
          $sdkVersions = Get-ChildItem "${env:ProgramFiles(x86)}\Windows Kits\10\bin\" | Where-Object { $_.Name -match "10\.0\.\d+\.\d+" } | Sort-Object Name -Descending
          foreach ($version in $sdkVersions) {
            $testPath = "${env:ProgramFiles(x86)}\Windows Kits\10\bin\$($version.Name)\x64\makeappx.exe"
            if (Test-Path $testPath) {
              $makeAppxPath = $testPath
              break
            }
          }
        }
        
        if (-not (Test-Path $makeAppxPath)) {
          Write-Error "MakeAppx.exe not found. Windows SDK may not be installed."
          exit 1
        }
        
        Write-Host "Using MakeAppx at: $makeAppxPath"
        
        # Create the MSIX package (unsigned for Store submission)
        & "$makeAppxPath" pack /d "msix-package" /p "Zenamp.msix" /o
        
        if ($LASTEXITCODE -ne 0) {
          Write-Error "MSIX package creation failed with exit code $LASTEXITCODE"
          exit 1
        }
        
        # Verify MSIX was created
        if (Test-Path "Zenamp.msix") {
          Write-Host "MSIX package created successfully: Zenamp.msix"
          $msixSize = (Get-Item "Zenamp.msix").Length
          Write-Host "MSIX file size: $msixSize bytes"
          Write-Host "Package is unsigned and ready for Microsoft Store submission"
        } else {
          Write-Error "MSIX file was not created!"
          exit 1
        }

    - name: Upload MSIX Package
      uses: actions/upload-artifact@v4
      with:
        name: Zenamp.msix
        path: Zenamp.msix

  create-release:
    needs: [build-linux, build-msi-windows, build-msix-windows]
    runs-on: ubuntu-latest
    permissions:
      contents: write
    if: github.event_name == 'push'
    
    steps:
    - name: Download MSI Artifact
      uses: actions/download-artifact@v4
      with:
        name: Zenamp.msi
        path: release

    - name: Download MSIX Artifact
      uses: actions/download-artifact@v4
      with:
        name: Zenamp.msix
        path: release

    - name: Download Portable Artifact
      uses: actions/download-artifact@v4
      with:
        name: Zenamp-Portable.zip
        path: release

    - name: Create GitHub Release
      uses: softprops/action-gh-release@v2
      with:
        files: |
          release/Zenamp.msi
          release/Zenamp.msix
          release/Zenamp-Portable.zip
        tag_name: ${{ github.ref == 'refs/heads/master' && format('v{0}', github.run_number) || github.ref == 'refs/heads/main' && format('v{0}', github.run_number) || format('dev-v{0}', github.run_number) }}
        name: ${{ (github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main') && format('Release v{0}', github.run_number) || format('Dev Build v{0}', github.run_number) }}
        draft: false
        prerelease: ${{ github.ref != 'refs/heads/master' && github.ref != 'refs/heads/main' }}
        make_latest: ${{ github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main' }}
        body: |
          ## ${{ (github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main') && 'Stable Release' || 'Development Build' }}
          
          **Version:** ${{ needs.build-linux.outputs.version }}  
          **Commit:** ${{ github.sha }}  
          **Build:** #${{ github.run_number }}  
          
          ### Downloads
          - **Zenamp.msi** - Windows installer with uninstall support and file associations
          - **Zenamp.msix** - Unsigned package ready for Microsoft Store submission
          - **Zenamp-Portable.zip** - Portable version (no installation required)
          
          ### What's Inside
          - Multi-format playback: WAV, MP3, OGG, FLAC, MIDI, AIFF, OPUS
          - OPL3 MIDI synthesis for authentic retro sound
          - Complete playback controls with queue management
          - Volume control (10% to 300%)
          - Progress tracking with timestamps
          - GTK3 interface for modern desktop integration
          
          ### Microsoft Store Submission
          The MSIX package in this release is **unsigned** and ready for Microsoft Store submission through Partner Center. Before uploading:
          1. Update the Identity Name and Publisher in the manifest with values from Partner Center
          2. Upload the unsigned MSIX file - Microsoft handles signing during certification
          
          ### Silent Installation Support
          **For enterprise and automated deployments:**
          ```cmd
          # Silent install with all features (MSI)
          msiexec /i Zenamp.msi /quiet /norestart ASSOCIATE_FILES=1 DESKTOP_SHORTCUT=1
          
          # Silent install without file associations (MSI)
          msiexec /i Zenamp.msi /quiet /norestart ASSOCIATE_FILES=0 DESKTOP_SHORTCUT=0
          
          # Silent uninstall (MSI)
          msiexec /x Zenamp.msi /quiet /norestart
          ```
          
          **Command-line Properties (MSI only):**
          - `ASSOCIATE_FILES=1` - Enable file associations (default: 1)
          - `DESKTOP_SHORTCUT=1` - Create desktop shortcut (default: 1)
          - `INSTALLFOLDER="C:\Program Files\Zenamp"` - Custom install path
          
          ### Package Comparison
          | Feature | MSI | MSIX | Portable |
          |---------|-----|------|----------|
          | Installation Required | Yes | Yes | No |
          | File Associations | ✅ | ✅ | ❌ |
          | Start Menu Integration | ✅ | ✅ | ❌ |
          | Auto-Update Support | ❌ | ✅ | ❌ |
          | Microsoft Store Ready | ❌ | ✅ | ❌ |
          | Enterprise Deployment | ✅ | ✅ | ✅ |
          | Sandboxed | ❌ | ✅ | ❌ |
          | Traditional Uninstall | ✅ | ✅ | ❌ |
          | Code Signing Required | ✅ | Store | ❌ |
          
          ### Technical Details
          - Built on: Linux (Fedora 41 container)
          - MSI compiled on: Windows Latest
          - MSIX compiled on: Windows Latest
          - **Embedded Icon**: Icon properly embedded in executable
          - **Version Information**: Full version details embedded
          - **Store-Compliant Assets**: Multiple scale factors (100%, 125%, 150%, 200%)
          - GTK3 runtime included
          - All dependencies bundled
          - Cross-compiled with MinGW
          
          ### File Association Support
          When file associations are enabled during installation:
          - **WAV** - Windows Audio files
          - **MP3** - MPEG Audio Layer 3
          - **OGG** - Ogg Vorbis files
          - **FLAC** - Free Lossless Audio Codec
          - **MIDI** - Musical Instrument Digital Interface (.mid/.midi)
          - **AIFF** - Audio Interchange File Format (.aiff/.aif)
          - **OPUS** - Royalty-free lossy audio codec
          - **M3U** - Audio playlist files
          
          Right-click any supported audio file or playlist and select "Open with Zenamp" or "Play with Zenamp"!
          
          ---
          *Built with GitHub Actions*
